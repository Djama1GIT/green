version: "3.9"
services:
  db:
    image: postgres:15
    container_name: green_db
    restart: always
    ports:
      - 5432:5432
    env_file:
      - .env
#    volumes:
#      - db_data:/var/lib/postgresql/data

  redis:
    image: redis:7
    container_name: green_redis
    restart: always
    env_file:
      - .env
#    volumes:
#      - redis_data:/app/data

  server:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: green_server
    command: sh -c "alembic upgrade head && python manage.py run --ac --auto"
    ports:
      - 8080:8000
    restart: always
    env_file:
      - .env
    depends_on:
      - db
      - redis
#    volumes:
#      - server_data:/app/data

  client:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: green_client
    ports:
      - 80:3000
    restart: always
    environment:
      - NODE_ENV=production
#    volumes:
#      - client_data:/app/data

  celery:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: green_celery
    command: sh -c "celery -A tasks.tasks:celery_app worker --loglevel=INFO --pool=solo"
    restart: always
    env_file:
      - .env
    depends_on:
      - redis
#    volumes:
#      - celery_data:/app/data

  flower:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: green_flower
    command: sh -c "celery -A tasks.tasks:celery_app flower"
    restart: always
    env_file:
      - .env
    depends_on:
      - redis
      - celery
#    volumes:
#      - flower_data:/app/data

#volumes:
#  db_data:
#  redis_data:
#  server_data:
#  client_data:
#  celery_data:
#  flower_data: